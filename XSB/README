Prototypical Prolog-Implementation of the access analysis presented in the paper
  "Model-Driven Specification and Analysis of Confidentiality in Component-Based Systems"
submitted to the 14th International Conference on Software Engineering and Formal Methods, 2016

Requirements:
   XSB Logic Programming and Deductive Database system for Unix and Windows,
   available from http://xsb.sourceforge.net/
   Our implementation was tested with version the XSB release 3.5.


Running:  On a Linux system with XSB installed, run
  "make"
can be used to create a text file "queries-justify.result" containing all vulnerabilities in the analysed architectural and confidentiality model.

Several variables need to be set in the *Makefile* to run the analysis. 
- *XSB* defines the path to XSB on your local machine. 
- *FROMPALLADIO_FACTS* takes a path to the folder containing the *.P Files (prolog model) of an architectural and confidentiality model. 
Several existing palladio models are already included. 

If a suitable ghc distribution is available, you can run
  "make queries-justify.result.pretty"
to create a text file "queries-justify.result.pretty" with more readable formatting

With the prototypical command 
 "make queries-justify.result.json" the vulnerabilities are provided in the JavaScript Object Notation (JSON) format. 



Note that in addition to the vulnerabilities explained in the paper,
a number of vulnerabilites with an explanation containing
  "not serviceAllowedToBeObservedBy(_,_)"
are reported. These are  due to the fact that in the example, the calls
to services are not specified to be included in any dataset.
