% BEGIN IMPORTS
:- import  none/0,
           shared/0, exclusive/0,
           possible/0, existing/0, complete/0
           from security.
:- import  return/1
           from palladio.
:- import  distinct/2
           from util.
% END IMPORTS

justify_pred(dataAllowedToBeAccessedBy(_,_)).
justify_pred(classificationOf(_,_)).
justify_pred(classificationOfCall(_,_)).
justify_pred(tamperingAbilities(_,_,_)).
justify_pred(locationsAccessibleBy(_,_)).
justify_pred(furtherConnections(_,_)).
justify_pred(sharing(_,_)).
justify_pred(location(_,_,_)).
justify_pred(linkLocation(_,_,_)).
justify_pred(dataset(_)).
justify_pred(attacker(_)).

isLocation(Location) :- location(Location).

% TODO: there currently appears to be no palladio stereotype corresponding to uiInterfaceOn
% It should probably be some stereotype that can be attached to an interface instance in an assembly context
uiInterfaceOn(_Container,_Interface).

dataset(Dataset) :- dataSet(Dataset).

attacker(Attacker) :- adversary(Attacker).

dataAllowedToBeAccessedBy(Attacker,Dataset) :-
        mayKnowDatasets(Attacker, Datasets),
        member(Attacker, Datasets).

classificationOf(InputParameter, Dataset) :-
        inputParameters(InputParameter, _Service),
        dataSetTargets(InputParameter, Datasets),
        member(Dataset, Datasets).
classificationOf(return(Service), Dataset) :-
        outputParameters(return(Service), Service), % TODO: this is most likely redundant
        dataSetTargets(Service,Datasets).
        member(Dataset, Datasets).

% TODO: currently there is no way in palladio to specify what information is contained in the presence of calls
classificationOfCall(Parameter, Dataset) :- false.


% TODO: this differs somewhat from the description in the paper, owing to the different specification via tamper/location pairs.
tamperingAbilities(Attacker,TamperProtection, Location) :-
        adversary(Attacker),
        locationsAndTamperProtectionsPairs(Attacker,Pairs),
        member(Pair,Pairs),
        locations(Pair,Locations),
        member(Location,Locations),
        tamperProtections(Pair, TamperProtections),
        member(TamperProtection, TamperProtections).
tamperingAbilities(Attacker,none, Location) :-
        adversary(Attacker),
        locationsAndTamperProtectionsPairs(Attacker,Pairs),
        member(Pair,Pairs),
        locations(Pair,Locations).

% TODO: this differs somewhat from the description in the paper, owing to the different specification via tamper/location pairs.
locationsAccessibleBy(Attacker, Location) :- tamperingAbilities(Attacker, _TamperProtection, Location).


furtherConnections(Container,Mode) :- connectionType(Container,Mode).

% sharing(Container,Mode) is directly used from the palladio export.


% TODO: this differs somewhat from the description in the paper, owing to the different specification via tamper/location pairs.
location(Container,Location, TamperProtection) :-
        resourceContainer(Container),
        locationsAndTamperProtectionsPairs(Container,Pairs),
        member(Pair,Pairs),
        locations(Pair,Locations),
        member(Location,Locations),
        tamperProtections(Pair, TamperProptections),
        member(TamperProptection, TamperProptections).
location(Container,Location, none) :-
        resourceContainer(Container),
        locationsAndTamperProtectionsPairs(Container,Pairs),
        member(Pair,Pairs),
        locations(Pair,Locations).
        member(Location,Locations),


% TODO: this differs somewhat from the description in the paper, owing to the different specification via tamper/location pairs.
linkLocation(LinkingResource,LinkLocation, TamperProtection) :-
        linkingResource(LinkingResource),
        locationsAndTamperProtectionsPairs(LinkingResource,Pairs),
        member(Pair,Pairs),
        locations(Pair,Locations),
        member(Location,Locations),
        tamperProtections(Pair, TamperProptections),
        member(TamperProptection, TamperProptections).
linkLocation(LinkingResource,LinkLocation, none) :-
        linkingResource(LinkingResource),
        locationsAndTamperProtectionsPairs(LinkingResource,Pairs),
        member(Pair,Pairs),
        locations(Pair,Locations),
        member(Location,Locations),
