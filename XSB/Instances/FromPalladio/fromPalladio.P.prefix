% BEGIN IMPORTS
:- import  shared/0, exclusive/0,
           possible/0, existing/0, complete/0,
           none/0
           from security.
% END IMPORTS

% apparantly, xsb prolog does not balk at ungrouped facts, after all,
% so here we can list failing rules for predicates for which the palladio export
% may not always generate any facts at all.
outerRequiredRole(_,_) :- fail.
basicComponent(_) :- fail.
unencryptedDataSets(_,_) :- fail.
tamperProtections(_,_) :- fail.
requiredDelegationConnector(_) :- fail.
dataSetMapEntry(_) :- fail.
sharing(_,_) :- fail. % see "default-rule" for sharingOf/2 in Instances/FromPalladio/securityInstance.P
dataSetMap(_) :- fail.
map(_,_) :- fail.
compositeDataType(_) :- fail.
connectorSpecificParametersAndDataPairs(_,_) :- fail.
collectionDataType(_) :- fail.

% Suppress warnings wrt unused predicates:
fake_usage :-
        adversaries(_),
        adversaries(_,_),
        allocation(_),
        allocationContexts(_,_),
        assemblyContexts(_,_),
        communicationLinkResourceSpecifications(_,_),
        components(_,_),
	collectionDataType(_),
        confidentialitySpecification(_),
        connectors(_,_),
	compositeDataType(_),
        dataIdentifier(_,_),
        dataSetMap(_),
        dataSetMaps(_,_),
        interfaces(_,_),
        linkingResources(_,_),
        locationsAndTamperProtectionsPair(_),
        map(_,_),
        operationInterface(_),
        operationSignature(_),
        parameter(_),
        parametersAndDataPair(_),
        parentInterfaces(_,_),
        providedDelegationConnector(_),
        repository(_),
        resourceEnvironment(_),
        sizeOf(_,_),
        sizeOfParameter(_),
        system(_),
        tamperProtection(_),

        shared = shared, exclusive = exclusive,
        possible = possible, existing = existing, complete = complete,
        none = none.
