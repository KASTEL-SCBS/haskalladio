% BEGIN IMPORTS
:- import  exposesPhysicallyAccessibleDataTo/3 from linkModel.

:- import  mayknow/2,
           tamperingAbilities/3,
           locationsAccessibleBy/2,
           furtherConnections/2,
           sharingOf/2,
           location/3,
           includesCall/2,
           includes/2,
           uiInterfaceOn/2,
           linkLocation/3
           from securityInstance.


:- import  accessibleParameters/2,
           observableServices/2
           from abstractAnalysis.

:- import  providedInterfacesOn/3,
           requiredInterfacesOn/3
           from palladio.
% END IMPORTS

% BEGIN EXPORTS
:- export  % Predicates
           isInSecureWithRespectTo/1,               % isInSecureWithRespectTo(Attacker)

           containersFullyAccessibleBy/2,           % containersFullyAccessibleBy(Attacker,ResourceContainer)
           linksDataAccessibleBy/3,                 % linksDataAccessibleBy(Attacker,LinkingResource, Dataset)

           linkAccessibleBy/3,             % linkAccessibleBy(Attacker,Link,Location)
           containersPhysicalAccessibleBy/3,        % containersPhysicalAccessibleBy(Attacker,Container,Location)

           providedInterfacesAccessibleTo/3,        % providedInterfacesAccessibleTo(Attacker, Interface, AssemblyContext)
           requiredInterfacesAccessibleTo/3,        % requiredInterfacesAccessibleTo(Attacker, Interface, AssemblyContext)

           % Used Functors
           % Sharing = OpenShared | ControlledExclusive
           shared/0, exclusive/0,
           % FurtherConnections = Possible | Existing | Complete
           possible/0, existing/0, complete/0,
           % Default tampering Abiility
           none/0.
% END EXPORTS

justify_pred(isInSecureWithRespectTo(_)).
justify_pred(containersFullyAccessibleBy(_,_)).
justify_pred(linksDataAccessibleBy(_,_,_)).
justify_pred(linkAccessibleBy(_,_,_)).
justify_pred(containersPhysicalAccessibleBy(_,_,_)).
justify_pred(providedInterfacesAccessibleTo(_,_,_)).
justify_pred(requiredInterfacesAccessibleTo(_,_,_)).
justify_pred(serviceAllowedToBeObservedBy(_,_)).
justify_pred(parameterAllowedToBeAccessedBy(_,_)).

isInSecureWithRespectTo(Attacker) :-
        accessibleParameters(Attacker,Parameter),
        not(parameterAllowedToBeAccessedBy(Attacker,Parameter)).

isInSecureWithRespectTo(Attacker) :-
        observableServices(Attacker,Service),
        not(serviceAllowedToBeObservedBy(Attacker,Service)).


serviceAllowedToBeObservedBy(Attacker, Service) :-
        includesCall(Service, DataSet),
        mayknow(Attacker, DataSet).


parameterAllowedToBeAccessedBy(Attacker, Parameter) :-
        includes(Parameter, DataSet),
        mayknow(Attacker, DataSet).


containersFullyAccessibleBy(Attacker,Container) :-
        containersPhysicalAccessibleBy(Attacker,Container,Location),
        location(Container,Location,Method),
        tamperingAbilities(Attacker,Location,Method).
containersFullyAccessibleBy(_,Container) :-
        sharingOf(Container,shared),
        furtherConnections(Container,existing).
containersFullyAccessibleBy(Attacker,Container) :-
        containersPhysicalAccessibleBy(Attacker,Container,_),
        sharingOf(Container,shared),
        furtherConnections(Container,possible).


linksDataAccessibleBy(Attacker,Link,Dataset) :-
    linkAccessibleBy(Attacker,Link,Location),
    linkLocation(Link,Location,Method),
    tamperingAbilities(Attacker,Location,Method),
    exposesPhysicallyAccessibleDataTo(Link,Attacker,Dataset).


linkAccessibleBy(Attacker,Link,Location) :-
    linkLocation(Link,Location,_),
    locationsAccessibleBy(Attacker,Location).

containersPhysicalAccessibleBy(Attacker,Container,Location) :-
    location(Container,Location,_),
    locationsAccessibleBy(Attacker,Location).

providedInterfacesAccessibleTo(Attacker, Interface, Context) :-
    containersPhysicalAccessibleBy(Attacker,Container,_),
    providedInterfacesOn(Container, Interface, Context),
    uiInterfaceOn(Container, Interface).

requiredInterfacesAccessibleTo(Attacker, Interface, Context) :-
    containersPhysicalAccessibleBy(Attacker,Container,_),
    requiredInterfacesOn(Container, Interface, Context),
    uiInterfaceOn(Container, Interface).
